service: public-blog-frontend
frameworkVersion: "3"
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: ${self:custom.MEMORYSIZE.${self:provider.stage}}
  timeout: 30
  stage: ${opt:stage,'dev'}
  deploymentBucket:
    name: serverless-deployment-bucket1
  region: us-west-2
  apiGateway:
    shouldStartNameWithService: true

package:
  excludeDevDependencies: true
  patterns:
    - "!**"
    - "node_modules/html-minifier/**"
    - "node_modules/commander/**"
    - "node_modules/upper-case/**"
    - "node_modules/clean-css/**"
    - "node_modules/source-map/**"
    - "node_modules/lower-case/**"
    - "node_modules/no-case/**"
    - "node_modules/he/**"
    - "node_modules/param-case/**"
    - "node_modules/relateurl/**"
    - "node_modules/uglify-js/**"
    - "node_modules/serverless-http/**"
    - "dist/**"
    - "lambda.js"
custom:
  stages:
    - dev
    - qas
    - prd
  DB_NAME:
    dev: ${ssm:PUBLIC_DB_NAME_DEV}
    qas: ${ssm:PUBLIC_DB_NAME_QAS}
    prd: ${ssm:PUBLIC_DB_NAME_PRD}
  MEMORYSIZE:
    dev: ${ssm:PUBLIC_MEMORYSIZE_DEV}
    qas: ${ssm:PUBLIC_MEMORYSIZE_QAS}
    prd: ${ssm:PUBLIC_MEMORYSIZE_PRD}
functions:
  api:
    handler: dist/lambda.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY
    layers:
      - arn:aws:lambda:us-west-2:206284375225:layer:coky-lambda-layer1:3
    environment:
      NODE_ENV: ${self:provider.stage}
      APP_KEY: ${ssm:PUBLIC_APP_KEY}
      JWT_KEY: ${ssm:PUBLIC_JWT_KEY}
      DB_HOST: ${ssm:PUBLIC_DB_HOST}
      DB_USER: ${ssm:PUBLIC_DB_USER}
      DB_PASSWORD: ${ssm:PUBLIC_DB_PASSWORD}
      DB_NAME: ${self:custom.DB_NAME.${self:provider.stage}}
plugins:
  - serverless-stage-manager
