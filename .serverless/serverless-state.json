{
  "service": {
    "service": "public-blog-frontend",
    "serviceObject": {
      "name": "public-blog-frontend"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "memorySize": 128,
      "timeout": 30,
      "stage": "dev",
      "deploymentBucket": "serverless-deployment-bucket1",
      "region": "us-west-2",
      "apiGateway": {
        "shouldStartNameWithService": true
      },
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "serverless-deployment-bucket1"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/public-blog-frontend-dev-api"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "public-blog-frontend",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/public-blog-frontend-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/public-blog-frontend-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "public-blog-frontend",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-deployment-bucket1",
                "S3Key": "serverless/public-blog-frontend/dev/1660677095200-2022-08-16T19:11:35.200Z/public-blog-frontend.zip"
              },
              "Handler": "dist/lambda.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "public-blog-frontend-dev-api",
              "MemorySize": 128,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "NODE_ENV": "dev",
                  "APP_KEY": "FG1PKyCx8tZh43q3QFVbzMAApZ",
                  "JWT_KEY": "2WwgRUCjBUtPrhmhskRNfjhnDc",
                  "DB_HOST": "aurora-desarrollos.cpub4tu3mgam.us-west-2.rds.amazonaws.com",
                  "DB_USER": "admin",
                  "DB_PASSWORD": "17sfkebdaESHnzV7RvBG",
                  "DB_NAME": "public"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-west-2:206284375225:layer:coky-lambda-layer1:3"
              ]
            },
            "DependsOn": [
              "ApiLogGroup"
            ]
          },
          "ApiLambdaVersionlZDrZ5vJkF9Yqvs6DEm85Sh05FDj2JiyxRMxgcoO8I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "ezCCwHLtm0PDzI/CVfaoNVqnXxHoo41uArqzUxfD/Cg="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "public-blog-frontend-dev",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ApiLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ApiLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1660677086053": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodAny",
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "ApiLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-deployment-bucket1",
            "Export": {
              "Name": "sls-public-blog-frontend-dev-ServerlessDeploymentBucketName"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersionlZDrZ5vJkF9Yqvs6DEm85Sh05FDj2JiyxRMxgcoO8I"
            },
            "Export": {
              "Name": "sls-public-blog-frontend-dev-ApiLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-public-blog-frontend-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stages": [
        "dev",
        "qas",
        "prd"
      ],
      "DB_NAME": {
        "dev": "public",
        "qas": "public_qas",
        "prd": "public_prd"
      },
      "MEMORYSIZE": {
        "dev": "128",
        "qas": "128",
        "prd": "512"
      }
    },
    "plugins": [
      "serverless-stage-manager"
    ],
    "pluginsData": {},
    "functions": {
      "api": {
        "handler": "dist/lambda.handler",
        "events": [
          {
            "http": {
              "path": "",
              "method": "any",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "{proxy+}",
              "method": "any",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "environment": {
          "NODE_ENV": "dev",
          "APP_KEY": "FG1PKyCx8tZh43q3QFVbzMAApZ",
          "JWT_KEY": "2WwgRUCjBUtPrhmhskRNfjhnDc",
          "DB_HOST": "aurora-desarrollos.cpub4tu3mgam.us-west-2.rds.amazonaws.com",
          "DB_USER": "admin",
          "DB_PASSWORD": "17sfkebdaESHnzV7RvBG",
          "DB_NAME": "public"
        },
        "name": "public-blog-frontend-dev-api",
        "package": {},
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "ApiLambdaVersionlZDrZ5vJkF9Yqvs6DEm85Sh05FDj2JiyxRMxgcoO8I"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "public-blog-frontend",
      "frameworkVersion": "3",
      "useDotenv": true,
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "excludeDevDependencies": true,
        "patterns": [
          "!**",
          "node_modules/html-minifier/**",
          "node_modules/commander/**",
          "node_modules/upper-case/**",
          "node_modules/clean-css/**",
          "node_modules/source-map/**",
          "node_modules/lower-case/**",
          "node_modules/no-case/**",
          "node_modules/he/**",
          "node_modules/param-case/**",
          "node_modules/relateurl/**",
          "node_modules/uglify-js/**",
          "node_modules/serverless-http/**",
          "dist/**",
          "lambda.js"
        ],
        "artifactsS3KeyDirname": "serverless/public-blog-frontend/dev/code-artifacts",
        "deploymentBucket": "serverless-deployment-bucket1",
        "artifact": "C:\\Users\\vguzman\\Documents\\GitHub\\blog-frontend\\.serverless\\public-blog-frontend.zip",
        "artifactDirectoryName": "serverless/public-blog-frontend/dev/1660677095200-2022-08-16T19:11:35.200Z"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\vguzman\\Documents\\GitHub\\blog-frontend\\.serverless\\public-blog-frontend.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/public-blog-frontend/dev/1660677095200-2022-08-16T19:11:35.200Z",
    "artifact": "public-blog-frontend.zip"
  }
}