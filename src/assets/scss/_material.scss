// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$frontend-primary: mat.define-palette(mat.$indigo-palette);
$frontend-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$frontend-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontend-theme: mat.define-light-theme(
  (
    color: (
      primary: $frontend-primary,
      accent: $frontend-accent,
      warn: $frontend-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($frontend-theme);

mat-dialog-container {
  border-radius: var(--default-radius) !important;
  padding: 0 !important;
  box-shadow: none !important;
}

.cdk-global-scrollblock {
  overflow: hidden;
}

.mat-icon-button {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.mat-icon {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  min-width: 1em !important;
  min-height: 1em !important;
  margin: 0 !important;
  padding: 0 !important;
}

.mat-option-text,
.mat-option-text mat-checkbox,
.mat-option-text mat-checkbox .mat-checkbox-layout,
.mat-option-text mat-checkbox .mat-checkbox-layout .mat-checkbox-label {
  display: flex !important;
  align-items: center !important;
  width: 100% !important;
  height: 100% !important;
}

.mat-step-header .mat-icon {
  font-weight: 900;
}
.mat-step-header .mat-step-icon {
  background-color: #b3bec8 !important;
  color: #fff !important;
}
.mat-step-header .mat-step-icon-selected {
  background-color: var(--bg-primary) !important;
  color: #fff !important;
}
.mat-step-header .mat-step-icon-state-edit {
  background-color: #d0d7de !important;
  color: var(--bg-primary) !important;
}
.mat-step-header {
  background-color: transparent !important;
}

.mat-step-header .mat-step-label {
  font-size: 14px;
  font-weight: 400;
  color: #5e7184 !important;
}

.mat-step-header .mat-step-label-selected {
  color: var(--bg-primary) !important;
  font-size: 14px;
  font-weight: 400;
}

.mat-horizontal-content-container {
  padding: 3rem !important;
  min-height: 500px !important;
  border-radius: 8px;
  border: 2px solid #ccc1ff;
  margin-bottom: 3rem;

  @media (max-width: 768px) {
    padding: 1rem !important;
  }
}

.mat-stepper-horizontal {
  background-color: transparent !important;
}

.untouchable-steps .mat-horizontal-stepper-header {
  pointer-events: none !important;
}

.flex-stepper {
  .mat-horizontal-stepper-wrapper {
    display: flex;
    align-items: center;

    .mat-horizontal-stepper-header-container {
      display: flex;
      align-items: center;
      justify-content: center;
      width: fit-content;
    }

    .mat-horizontal-content-container {
      width: 100%;
    }
  }
}

.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {
  color: var(--mat-form-field-active-color) !important;
}

.mat-menu-item {
  display: flex !important;
  align-items: center !important;
  gap: 1rem;
}
